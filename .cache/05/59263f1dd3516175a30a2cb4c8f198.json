{"id":"9k3w","dependencies":[{"name":"D:\\med\\node_modules\\brain.js\\dist\\recurrent\\matrix\\relu-b.js.map","includedInParent":true,"mtime":499162500000},{"name":"D:\\med\\package.json","includedInParent":true,"mtime":1553819528004},{"name":"D:\\med\\.babelrc","includedInParent":true,"mtime":1553726249193},{"name":"D:\\med\\node_modules\\brain.js\\package.json","includedInParent":true,"mtime":1553430479700}],"generated":{"js":"\"use strict\";function e(e,t){for(var s=0;s<e.deltas.length;s++)t.deltas[s]=t.weights[s]>0?e.deltas[s]:0}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=e;","map":{"mappings":[{"source":"../../../src/recurrent/matrix/relu-b.js","name":null,"original":{"line":6,"column":15},"generated":{"line":1,"column":13}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"reluB","original":{"line":6,"column":24},"generated":{"line":1,"column":22}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"product","original":{"line":6,"column":30},"generated":{"line":1,"column":24}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"left","original":{"line":6,"column":39},"generated":{"line":1,"column":26}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":null,"original":{"line":7,"column":2},"generated":{"line":1,"column":29}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":null,"original":{"line":7,"column":6},"generated":{"line":1,"column":33}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"i","original":{"line":7,"column":10},"generated":{"line":1,"column":37}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":null,"original":{"line":7,"column":14},"generated":{"line":1,"column":39}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"i","original":{"line":7,"column":17},"generated":{"line":1,"column":41}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"product","original":{"line":7,"column":21},"generated":{"line":1,"column":43}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"deltas","original":{"line":7,"column":29},"generated":{"line":1,"column":45}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"length","original":{"line":7,"column":36},"generated":{"line":1,"column":52}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"i","original":{"line":7,"column":44},"generated":{"line":1,"column":59}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"left","original":{"line":8,"column":4},"generated":{"line":1,"column":63}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"deltas","original":{"line":8,"column":9},"generated":{"line":1,"column":65}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"i","original":{"line":8,"column":16},"generated":{"line":1,"column":72}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"left","original":{"line":8,"column":21},"generated":{"line":1,"column":75}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"weights","original":{"line":8,"column":26},"generated":{"line":1,"column":77}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"i","original":{"line":8,"column":34},"generated":{"line":1,"column":85}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":null,"original":{"line":8,"column":39},"generated":{"line":1,"column":88}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"product","original":{"line":8,"column":43},"generated":{"line":1,"column":90}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"deltas","original":{"line":8,"column":51},"generated":{"line":1,"column":92}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"i","original":{"line":8,"column":58},"generated":{"line":1,"column":99}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":null,"original":{"line":8,"column":63},"generated":{"line":1,"column":102}},{"source":"../../../src/recurrent/matrix/relu-b.js","name":"reluB","original":{"line":6,"column":24},"generated":{"line":1,"column":175}}],"sources":{"../../../src/recurrent/matrix/relu-b.js":"/**\n * adds {from} deltas to {m} deltas when {m} weights are above other a threshold of 0\n * @param {Matrix} product\n * @param {Matrix} m\n */\nexport default function reluB(product, left) {\n  for(let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = left.weights[i] > 0 ? product.deltas[i] : 0;\n  }\n}\n"},"lineCount":null}},"hash":"3b323902ac8f1290b19b1d08b3f59599","cacheData":{"env":{}}}